{"version":3,"sources":["containers/items/index.js","components/form/index.js","components/not-found/index.js","App.js","index.js"],"names":["Items","items","completed","remove","map","item","index","key","toString","className","label","type","onClick","width","height","d","fill","Form","setLabel","add","onSubmit","e","placeholder","value","onChange","target","disabled","length","NotFound","App","useState","setItem","itemIndex","newItems","filter","i","k","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAwCeA,MA7Bf,YAA8C,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OACjC,OACE,oCACE,4BACGF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,wBAAIC,IAAKD,EAAME,WAAYC,UAAS,cAASJ,EAAKH,UAAY,aAAe,KAC3E,yBAAKO,UAAS,eAAUJ,EAAKH,UAAY,aAAe,KAAOG,EAAKK,OACpE,6BACE,4BAAQC,KAAK,SAASF,UAAU,YAAYG,QAAS,kBAAMV,EAAUI,KACnE,yBAAKO,MAAO,GAAIC,OAAQ,IACtB,0BACEC,EAAE,yQACFC,KAAK,WAIX,4BAAQL,KAAK,SAASF,UAAU,SAASG,QAAS,kBAAMT,EAAOG,KAA/D,a,MCGCW,MAlBf,YAAyC,IAAzBP,EAAwB,EAAxBA,MAAOQ,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,IAC/B,OACE,0BAAMC,SAAU,SAACC,GAAD,OAAOF,EAAIE,KACzB,2BACEV,KAAK,OACLW,YAAY,4BACZC,MAAOb,EACPc,SAAU,SAACH,GAAD,OAAOH,EAASG,EAAEI,OAAOF,UAErC,4BAAQZ,KAAK,SAASe,SAAUhB,EAAMiB,OAAS,GAA/C,SCfSC,MAJf,WACE,OAAO,gD,MCsDMC,MA7Cf,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACN7B,EADM,KACC8B,EADD,OAEaD,mBAAS,IAFtB,mBAENpB,EAFM,KAECQ,EAFD,KA0Bb,OACE,yBAAKT,UAAU,aAEZR,EAAM0B,OAAS,EACd,kBAAC,EAAD,MAGA,kBAAC,EAAD,CACE1B,MAAOA,EACPE,OAAQ,SAAC6B,GAAD,OAtBD,SAAC1B,GACd,IAAM2B,EAAWhC,EAAMiC,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAM9B,KAE9CyB,EAAQE,GAmBqB9B,CAAO6B,IAC9B9B,UAAW,SAAC8B,GAAD,OAjBD,SAAC1B,GACjB,IAAMD,EAAOJ,EAAMK,GACnBD,EAAKH,WAAaG,EAAKH,UAEvB6B,EAAQ,YAAI9B,IAaoBC,CAAU8B,MAIxC,kBAAC,EAAD,CAAMb,IAAK,SAACE,GAAD,OApCH,SAACA,GACXA,EAAEgB,iBAEE3B,EAAMiB,OAAS,IACjBI,EAAQ,GAAD,mBAAK9B,GAAL,CAAY,CAAES,QAAOR,WAAW,MACvCgB,EAAS,KA+BSC,CAAIE,IAAIX,MAAOA,EAAOQ,SAAU,SAACK,GAAD,OAAWL,EAASK,QC/C5Ee,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d2db3fc9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst propTypes = {\n  items: PropTypes.array,\n  remove: PropTypes.func,\n  completed: PropTypes.func,\n};\n\nfunction Items({ items, completed, remove }) {\n  return (\n    <>\n      <ul>\n        {items.map((item, index) => (\n          <li key={index.toString()} className={`item${item.completed ? ' completed' : ''}`}>\n            <div className={`label${item.completed ? ' completed' : ''}`}>{item.label}</div>\n            <div>\n              <button type=\"button\" className=\"completed\" onClick={() => completed(index)}>\n                <svg width={18} height={18}>\n                  <path\n                    d=\"M4.775 18.295c-.275-.004-1.462-1.778-2.638-3.944L0 10.413l.554-.554c.305-.305 1.124-.554 1.82-.554H3.64l.636 2.005.637 2.005 5.064-5.541c2.786-3.048 6.003-6.044 7.15-6.658L19.213 0l-4.21 4.782c-2.314 2.63-5.45 6.748-6.969 9.15-1.517 2.404-2.984 4.367-3.26 4.363z\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n              </button>\n              <button type=\"button\" className=\"remove\" onClick={() => remove(index)}>\n                x\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nItems.propTypes = propTypes;\n\nexport default Items;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport './index.scss';\n\nconst propTypes = {\n  label: PropTypes.string,\n  setLabel: PropTypes.func,\n  add: PropTypes.func,\n};\n\nfunction Form({ label, setLabel, add }) {\n  return (\n    <form onSubmit={(e) => add(e)}>\n      <input\n        type=\"text\"\n        placeholder=\"What are you doing today?\"\n        value={label}\n        onChange={(e) => setLabel(e.target.value)}\n      />\n      <button type=\"submit\" disabled={label.length < 1}>\n        Add\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = propTypes;\n\nexport default Form;\n","import React from 'react';\n\nfunction NotFound() {\n  return <div>No items found</div>;\n}\n\nexport default NotFound;\n","import React, { useState } from 'react';\n\n// Containers\nimport Items from './containers/items';\n\n// Components\nimport Form from './components/form';\nimport NotFound from './components/not-found';\n\n// Styles\nimport './App.css';\n\nfunction App() {\n  const [items, setItem] = useState([]);\n  const [label, setLabel] = useState('');\n\n  const add = (e) => {\n    e.preventDefault();\n\n    if (label.length > 0) {\n      setItem([...items, { label, completed: false }]);\n      setLabel('');\n    }\n  };\n\n  const remove = (index) => {\n    const newItems = items.filter((i, k) => k !== index);\n\n    setItem(newItems);\n  };\n\n  const completed = (index) => {\n    const item = items[index];\n    item.completed = !item.completed;\n\n    setItem([...items]);\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Not Found */}\n      {items.length < 1 ? (\n        <NotFound />\n      ) : (\n        /* Not Found */\n        <Items\n          items={items}\n          remove={(itemIndex) => remove(itemIndex)}\n          completed={(itemIndex) => completed(itemIndex)}\n        />\n      )}\n\n      <Form add={(e) => add(e)} label={label} setLabel={(value) => setLabel(value)} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}